<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bntDoanhThu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnOK.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>